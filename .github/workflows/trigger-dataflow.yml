name: Trigger Fabric Dataflow

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target Environment (e.g., DEV, QA, PROD)'
        required: true
        default: 'DEV'

jobs:
  trigger:
    runs-on: ubuntu-latest

    steps:
    - name: Set Environment Variable
      id: set_env
      run: |
        ENV="${{ github.event.inputs.environment }}"
        echo "ENV=$ENV" >> $GITHUB_ENV

    - name: Select Workspace and Dataflow IDs
      id: ids
      run: |
        case "${{ env.ENV }}" in
          DEV)
            echo "secret_ID=${{ secrets.FABRIC_CLIENT_SECRET }}" >> $GITHUB_OUTPUT
            echo "client_ID=${{ secrets.FABRIC_CLIENT_ID }}" >> $GITHUB_OUTPUT
            echo "WORKSPACE_ID=${{ secrets.FABRIC_WORKSPACE_ID }}" >> $GITHUB_OUTPUT
            echo "DATAFLOW_ID=${{ secrets.FABRIC_DATAFLOW_ID }}" >> $GITHUB_OUTPUT
            ;;
          QA)
            echo "WORKSPACE_ID=${{ secrets.FABRIC_WORKSPACE_ID_QA }}" >> $GITHUB_OUTPUT
            echo "DATAFLOW_ID=${{ secrets.FABRIC_DATAFLOW_ID_QA }}" >> $GITHUB_OUTPUT
            ;;
          PROD)
            echo "WORKSPACE_ID=${{ secrets.FABRIC_WORKSPACE_ID_PROD }}" >> $GITHUB_OUTPUT
            echo "DATAFLOW_ID=${{ secrets.FABRIC_DATAFLOW_ID_PROD }}" >> $GITHUB_OUTPUT
            ;;
          *)
            echo "❌ Invalid environment: '${{ env.ENV }}'"
            exit 1
            ;;
        esac

    - name: Get Access Token from Azure AD
      id: get_token
      run: |
        echo "🔐 Requesting token from Azure AD..."

        response=$(curl -s -X POST -H "Content-Type: application/x-www-form-urlencoded" \
          -d "grant_type=client_credentials" \
          -d "client_id=${{ secrets.FABRIC_CLIENT_ID }}" \
          -d "client_secret=${{ secrets.FABRIC_CLIENT_SECRET }}" \
          -d "scope=https://analysis.windows.net/powerbi/api/.default" \
          https://login.microsoftonline.com/${{ secrets.FABRIC_TENANT_ID }}/oauth2/v2.0/token)

        access_token=$(echo "$response" | jq -r '.access_token')

        if [ -z "$access_token" ] || [ "$access_token" == "null" ]; then
          echo "❌ Failed to obtain access token"
          echo "🔍 Azure Response:"
          echo "$response"
          exit 1
        fi

        echo "::add-mask::$access_token"
        echo "token=$access_token" >> $GITHUB_OUTPUT

    - name: Trigger Dataflow
      run: |
        echo "🚀 Triggering Dataflow for ${{ env.ENV }} environment..."
        curl -X POST \
          "https://api.powerbi.com/v1.0/myorg/groups/${{ steps.ids.outputs.WORKSPACE_ID }}/dataflows/${{ steps.ids.outputs.DATAFLOW_ID }}/refreshes" \
          -H "Authorization: Bearer ${{ steps.get_token.outputs.token }}" \
          -H "Content-Type: application/json"
